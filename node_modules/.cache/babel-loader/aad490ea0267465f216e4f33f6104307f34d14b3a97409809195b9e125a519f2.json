{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lshls\\\\eclipse-workspace\\\\board\\\\src\\\\main\\\\front\\\\src\\\\SignIn\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [userId, setUserId] = useState('');\n  const [password, setPassword] = useState('');\n  const [nickName, setNickName] = useState('');\n  const [isDuplicate, setIsDuplicate] = useState(false); //중복검사 완료 유무 완료되면 true 안되면 false\n\n  const url = \"http://localhost:8080\";\n  const config = {\n    \"Content-Type\": 'application/json'\n  };\n\n  //중복검사 함수\n  const duplicateCheck = e => {\n    e.preventDefault();\n    const signInForm = document.getElementById(\"signInForm\");\n    setUserId(signInForm.elements[0].value);\n    let user = {\n      'id': userId\n    };\n    axios.post(`${url}/duplicateCheck`, user, config).then(res => {\n      if (res.data) {\n        alert('사용 가능한 아이디');\n      } else {\n        alert(\"중복된 아이디\");\n      }\n      setIsDuplicate(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const SignInEvent = e => {\n    e.preventDefault();\n    console.log(\"회원가입 이벤트발생\");\n    const signInForm = document.getElementById(\"signInForm\");\n    setUserId(signInForm.elements[0].value);\n    setPassword(signInForm.elements[1].value);\n    setNickName(signInForm.elements[2].value);\n    let user = {\n      'id': userId,\n      'password': password,\n      'nickName': nickName\n    };\n    console.log(JSON.stringify(user));\n    axios.post(`${url}/signIn`, user, config).then(res => {\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err.data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"signInForm\",\n      onSubmit: SignInEvent,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: duplicateCheck,\n        children: \"\\uC544\\uC774\\uB514 \\uC911\\uBCF5 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"onSubmit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(SignIn, \"NK3whr1EGa3tsSdyHAMZb04dDv8=\");\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SignIn","_s","userId","setUserId","password","setPassword","nickName","setNickName","isDuplicate","setIsDuplicate","url","config","duplicateCheck","e","preventDefault","signInForm","document","getElementById","elements","value","user","post","then","res","data","alert","catch","err","console","log","SignInEvent","JSON","stringify","children","id","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c","$RefreshReg$"],"sources":["C:/Users/lshls/eclipse-workspace/board/src/main/front/src/SignIn/SignIn.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState , useEffect } from \"react\";\r\nimport axios\r\n from \"axios\";\r\nconst SignIn = () =>{\r\n\r\n    const [userId,setUserId] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [nickName, setNickName] = useState('')\r\n    const [isDuplicate , setIsDuplicate] = useState(false) //중복검사 완료 유무 완료되면 true 안되면 false\r\n\r\n    const url = \"http://localhost:8080\"\r\n    const config = {\"Content-Type\": 'application/json'};\r\n    \r\n    //중복검사 함수\r\n    const duplicateCheck = (e) =>{\r\n\r\n        e.preventDefault();\r\n        \r\n        const signInForm = document.getElementById(\"signInForm\");\r\n\r\n        setUserId(signInForm.elements[0].value);\r\n        let user = {\r\n            'id' : userId\r\n        };\r\n\r\n        axios.post(`${url}/duplicateCheck` , user , config)\r\n        .then((res)=>{\r\n\r\n        \r\n            \r\n            if(res.data){\r\n                alert('사용 가능한 아이디')\r\n            }\r\n            else{\r\n                alert(\"중복된 아이디\")\r\n            }\r\n        \r\n            setIsDuplicate(res.data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    const SignInEvent = (e) =>{\r\n\r\n        e.preventDefault();\r\n        console.log(\"회원가입 이벤트발생\");\r\n\r\n        const signInForm = document.getElementById(\"signInForm\");\r\n\r\n        setUserId(signInForm.elements[0].value);\r\n        setPassword(signInForm.elements[1].value);\r\n        setNickName(signInForm.elements[2].value);\r\n        \r\n        let user = {\r\n            'id' : userId,\r\n            'password' : password,\r\n            'nickName' : nickName\r\n        };\r\n\r\n        console.log(JSON.stringify(user))\r\n\r\n        axios.post(`${url}/signIn`, user , config)\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err.data);\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <form id = \"signInForm\" onSubmit={SignInEvent}> \r\n\r\n                <label>아이디</label>\r\n                <input></input>\r\n                <button onClick={duplicateCheck}>아이디 중복 확인</button>\r\n                <label>비밀번호</label>\r\n                <input></input>\r\n                <label>닉네임</label>\r\n                <input></input>\r\n\r\n                <button type=\"onSubmit\">회원가입</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}